/*
 * Copyright (c) 2012-2014, The Linux Foundation. All rights reserved.
 * Copyright (C) 2016 Linaro Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */
#ifndef __HFI_HELPER_H__
#define __HFI_HELPER_H__

#define HFI_COMMON_BASE				0

#define HFI_DOMAIN_BASE_COMMON			(HFI_COMMON_BASE + 0)
#define HFI_DOMAIN_BASE_VDEC			(HFI_COMMON_BASE + 0x1000000)
#define HFI_DOMAIN_BASE_VENC			(HFI_COMMON_BASE + 0x2000000)
#define HFI_DOMAIN_BASE_VPE			(HFI_COMMON_BASE + 0x3000000)

#define HFI_VIDEO_ARCH_OX			(HFI_COMMON_BASE + 0x1)

#define HFI_ARCH_COMMON_OFFSET			0

#define HFI_CMD_START_OFFSET			0x10000
#define HFI_MSG_START_OFFSET			0x20000

#define HFI_ERR_NONE				HFI_COMMON_BASE
#define HFI_ERR_SYS_FATAL			(HFI_COMMON_BASE + 0x1)
#define HFI_ERR_SYS_INVALID_PARAMETER		(HFI_COMMON_BASE + 0x2)
#define HFI_ERR_SYS_VERSION_MISMATCH		(HFI_COMMON_BASE + 0x3)
#define HFI_ERR_SYS_INSUFFICIENT_RESOURCES	(HFI_COMMON_BASE + 0x4)
#define HFI_ERR_SYS_MAX_SESSIONS_REACHED	(HFI_COMMON_BASE + 0x5)
#define HFI_ERR_SYS_UNSUPPORTED_CODEC		(HFI_COMMON_BASE + 0x6)
#define HFI_ERR_SYS_SESSION_IN_USE		(HFI_COMMON_BASE + 0x7)
#define HFI_ERR_SYS_SESSION_ID_OUT_OF_RANGE	(HFI_COMMON_BASE + 0x8)
#define HFI_ERR_SYS_UNSUPPORTED_DOMAIN		(HFI_COMMON_BASE + 0x9)

#define HFI_ERR_SESSION_FATAL			(HFI_COMMON_BASE + 0x1001)
#define HFI_ERR_SESSION_INVALID_PARAMETER	(HFI_COMMON_BASE + 0x1002)
#define HFI_ERR_SESSION_BAD_POINTER		(HFI_COMMON_BASE + 0x1003)
#define HFI_ERR_SESSION_INVALID_SESSION_ID	(HFI_COMMON_BASE + 0x1004)
#define HFI_ERR_SESSION_INVALID_STREAM_ID	(HFI_COMMON_BASE + 0x1005)
#define HFI_ERR_SESSION_INCORRECT_STATE_OPERATION	\
						(HFI_COMMON_BASE + 0x1006)
#define HFI_ERR_SESSION_UNSUPPORTED_PROPERTY	(HFI_COMMON_BASE + 0x1007)
#define HFI_ERR_SESSION_UNSUPPORTED_SETTING	(HFI_COMMON_BASE + 0x1008)
#define HFI_ERR_SESSION_INSUFFICIENT_RESOURCES	(HFI_COMMON_BASE + 0x1009)
#define HFI_ERR_SESSION_STREAM_CORRUPT_OUTPUT_STALLED	\
						(HFI_COMMON_BASE + 0x100a)
#define HFI_ERR_SESSION_STREAM_CORRUPT		(HFI_COMMON_BASE + 0x100b)
#define HFI_ERR_SESSION_ENC_OVERFLOW		(HFI_COMMON_BASE + 0x100c)
#define HFI_ERR_SESSION_UNSUPPORTED_STREAM	(HFI_COMMON_BASE + 0x100d)
#define HFI_ERR_SESSION_CMDSIZE			(HFI_COMMON_BASE + 0x100e)
#define HFI_ERR_SESSION_UNSUPPORT_CMD		(HFI_COMMON_BASE + 0x100f)
#define HFI_ERR_SESSION_UNSUPPORT_BUFFERTYPE	(HFI_COMMON_BASE + 0x1010)
#define HFI_ERR_SESSION_BUFFERCOUNT_TOOSMALL	(HFI_COMMON_BASE + 0x1011)
#define HFI_ERR_SESSION_INVALID_SCALE_FACTOR	(HFI_COMMON_BASE + 0x1012)
#define HFI_ERR_SESSION_UPSCALE_NOT_SUPPORTED	(HFI_COMMON_BASE + 0x1013)

#define HFI_EVENT_SYS_ERROR			(HFI_COMMON_BASE + 0x1)
#define HFI_EVENT_SESSION_ERROR			(HFI_COMMON_BASE + 0x2)

#define HFI_OX_BASE				0x01000000

#define HFI_EVENT_DATA_SEQUENCE_CHANGED_SUFFICIENT_BUFFER_RESOURCES	\
						(HFI_OX_BASE + 0x1)
#define HFI_EVENT_DATA_SEQUENCE_CHANGED_INSUFFICIENT_BUFFER_RESOURCES	\
						(HFI_OX_BASE + 0x2)
#define HFI_EVENT_SESSION_SEQUENCE_CHANGED	(HFI_OX_BASE + 0x3)
#define HFI_EVENT_SESSION_PROPERTY_CHANGED	(HFI_OX_BASE + 0x4)
#define HFI_EVENT_SESSION_LTRUSE_FAILED		(HFI_OX_BASE + 0x5)
#define HFI_EVENT_RELEASE_BUFFER_REFERENCE	(HFI_OX_BASE + 0x6)

#define HFI_BUFFERFLAG_EOS				0x00000001
#define HFI_BUFFERFLAG_STARTTIME			0x00000002
#define HFI_BUFFERFLAG_DECODEONLY			0x00000004
#define HFI_BUFFERFLAG_DATACORRUPT			0x00000008
#define HFI_BUFFERFLAG_ENDOFFRAME			0x00000010
#define HFI_BUFFERFLAG_SYNCFRAME			0x00000020
#define HFI_BUFFERFLAG_EXTRADATA			0x00000040
#define HFI_BUFFERFLAG_CODECCONFIG			0x00000080
#define HFI_BUFFERFLAG_TIMESTAMPINVALID			0x00000100
#define HFI_BUFFERFLAG_READONLY				0x00000200
#define HFI_BUFFERFLAG_ENDOFSUBFRAME			0x00000400
#define HFI_BUFFERFLAG_EOSEQ				0x00200000
#define HFI_BUFFERFLAG_MBAFF				0x08000000
#define HFI_BUFFERFLAG_VPE_YUV_601_709_CSC_CLAMP	0x10000000
#define HFI_BUFFERFLAG_DROP_FRAME			0x20000000
#define HFI_BUFFERFLAG_TEI				0x40000000
#define HFI_BUFFERFLAG_DISCONTINUITY			0x80000000

#define HFI_ERR_SESSION_EMPTY_BUFFER_DONE_OUTPUT_PENDING	\
							(HFI_OX_BASE + 0x1001)
#define HFI_ERR_SESSION_SAME_STATE_OPERATION	\
							(HFI_OX_BASE + 0x1002)
#define HFI_ERR_SESSION_SYNC_FRAME_NOT_DETECTED	\
							(HFI_OX_BASE + 0x1003)
#define HFI_ERR_SESSION_START_CODE_NOT_FOUND	\
							(HFI_OX_BASE + 0x1004)

#define HFI_BUFFER_INTERNAL_SCRATCH			(HFI_OX_BASE + 0x1)
#define HFI_BUFFER_EXTRADATA_INPUT			(HFI_OX_BASE + 0x2)
#define HFI_BUFFER_EXTRADATA_OUTPUT			(HFI_OX_BASE + 0x3)
#define HFI_BUFFER_EXTRADATA_OUTPUT2			(HFI_OX_BASE + 0x4)
#define HFI_BUFFER_INTERNAL_SCRATCH_1			(HFI_OX_BASE + 0x5)
#define HFI_BUFFER_INTERNAL_SCRATCH_2			(HFI_OX_BASE + 0x6)

#define HFI_BUFFER_MODE_STATIC				(HFI_OX_BASE + 0x1)
#define HFI_BUFFER_MODE_RING				(HFI_OX_BASE + 0x2)
#define HFI_BUFFER_MODE_DYNAMIC				(HFI_OX_BASE + 0x3)

#define HFI_FLUSH_INPUT					(HFI_OX_BASE + 0x1)
#define HFI_FLUSH_OUTPUT				(HFI_OX_BASE + 0x2)
#define HFI_FLUSH_OUTPUT2				(HFI_OX_BASE + 0x3)
#define HFI_FLUSH_ALL					(HFI_OX_BASE + 0x4)

#define HFI_EXTRADATA_NONE				0x00000000
#define HFI_EXTRADATA_MB_QUANTIZATION			0x00000001
#define HFI_EXTRADATA_INTERLACE_VIDEO			0x00000002
#define HFI_EXTRADATA_VC1_FRAMEDISP			0x00000003
#define HFI_EXTRADATA_VC1_SEQDISP			0x00000004
#define HFI_EXTRADATA_TIMESTAMP				0x00000005
#define HFI_EXTRADATA_S3D_FRAME_PACKING			0x00000006
#define HFI_EXTRADATA_FRAME_RATE			0x00000007
#define HFI_EXTRADATA_PANSCAN_WINDOW			0x00000008
#define HFI_EXTRADATA_RECOVERY_POINT_SEI		0x00000009
#define HFI_EXTRADATA_MPEG2_SEQDISP			0x0000000d
#define HFI_EXTRADATA_STREAM_USERDATA			0x0000000e
#define HFI_EXTRADATA_FRAME_QP				0x0000000f
#define HFI_EXTRADATA_FRAME_BITS_INFO			0x00000010
#define HFI_EXTRADATA_MULTISLICE_INFO			0x7f100000
#define HFI_EXTRADATA_NUM_CONCEALED_MB			0x7f100001
#define HFI_EXTRADATA_INDEX				0x7f100002
#define HFI_EXTRADATA_METADATA_LTR			0x7f100004
#define HFI_EXTRADATA_METADATA_FILLER			0x7fe00002

#define HFI_INDEX_EXTRADATA_INPUT_CROP			0x0700000e
#define HFI_INDEX_EXTRADATA_DIGITAL_ZOOM		0x07000010
#define HFI_INDEX_EXTRADATA_ASPECT_RATIO		0x7f100003

#define HFI_INTERLACE_FRAME_PROGRESSIVE			0x01
#define HFI_INTERLACE_INTERLEAVE_FRAME_TOPFIELDFIRST	0x02
#define HFI_INTERLACE_INTERLEAVE_FRAME_BOTTOMFIELDFIRST	0x04
#define HFI_INTERLACE_FRAME_TOPFIELDFIRST		0x08
#define HFI_INTERLACE_FRAME_BOTTOMFIELDFIRST		0x10

#define HFI_ARCH_OX_OFFSET				0x200000

#define HFI_PROPERTY_SYS_OX_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_OX_OFFSET + 0x0000)

#define HFI_PROPERTY_PARAM_OX_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_OX_OFFSET + 0x1000)
#define HFI_PROPERTY_PARAM_BUFFER_COUNT_ACTUAL	\
	(HFI_PROPERTY_PARAM_OX_START + 0x1)
#define HFI_PROPERTY_PARAM_UNCOMPRESSED_PLANE_ACTUAL_CONSTRAINTS_INFO	\
	(HFI_PROPERTY_PARAM_OX_START + 0x2)
#define HFI_PROPERTY_PARAM_INTERLACE_FORMAT_SUPPORTED	\
	(HFI_PROPERTY_PARAM_OX_START + 0x3)
#define HFI_PROPERTY_PARAM_CHROMA_SITE	\
	(HFI_PROPERTY_PARAM_OX_START + 0x4)
#define HFI_PROPERTY_PARAM_EXTRA_DATA_HEADER_CONFIG	\
	(HFI_PROPERTY_PARAM_OX_START + 0x5)
#define HFI_PROPERTY_PARAM_INDEX_EXTRADATA	\
	(HFI_PROPERTY_PARAM_OX_START + 0x6)
#define HFI_PROPERTY_PARAM_DIVX_FORMAT	\
	(HFI_PROPERTY_PARAM_OX_START + 0x7)
#define HFI_PROPERTY_PARAM_BUFFER_ALLOC_MODE	\
	(HFI_PROPERTY_PARAM_OX_START + 0x8)
#define HFI_PROPERTY_PARAM_S3D_FRAME_PACKING_EXTRADATA	\
	(HFI_PROPERTY_PARAM_OX_START + 0x9)
#define HFI_PROPERTY_PARAM_ERR_DETECTION_CODE_EXTRADATA	\
	(HFI_PROPERTY_PARAM_OX_START + 0xa)
#define HFI_PROPERTY_PARAM_BUFFER_ALLOC_MODE_SUPPORTED	\
	(HFI_PROPERTY_PARAM_OX_START + 0xb)
#define HFI_PROPERTY_PARAM_BUFFER_SIZE_ACTUAL	\
	(HFI_PROPERTY_PARAM_OX_START + 0xc)
#define HFI_PROPERTY_PARAM_BUFFER_DISPLAY_HOLD_COUNT_ACTUAL	\
	(HFI_PROPERTY_PARAM_OX_START + 0xd)

#define HFI_PROPERTY_CONFIG_OX_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_OX_OFFSET + 0x2000)
#define HFI_PROPERTY_CONFIG_BUFFER_REQUIREMENTS	\
	(HFI_PROPERTY_CONFIG_OX_START + 0x1)
#define HFI_PROPERTY_CONFIG_REALTIME	\
	(HFI_PROPERTY_CONFIG_OX_START + 0x2)
#define HFI_PROPERTY_CONFIG_PRIORITY	\
	(HFI_PROPERTY_CONFIG_OX_START + 0x3)
#define HFI_PROPERTY_CONFIG_BATCH_INFO	\
	(HFI_PROPERTY_CONFIG_OX_START + 0x4)

#define HFI_PROPERTY_PARAM_VDEC_OX_START	\
	(HFI_DOMAIN_BASE_VDEC + HFI_ARCH_OX_OFFSET + 0x3000)
#define HFI_PROPERTY_PARAM_VDEC_CONTINUE_DATA_TRANSFER	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x1)
#define HFI_PROPERTY_PARAM_VDEC_DISPLAY_PICTURE_BUFFER_COUNT	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x2)
#define HFI_PROPERTY_PARAM_VDEC_MULTI_VIEW_SELECT	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x3)
#define HFI_PROPERTY_PARAM_VDEC_PICTURE_TYPE_DECODE	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x4)
#define HFI_PROPERTY_PARAM_VDEC_OUTPUT_ORDER	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x5)
#define HFI_PROPERTY_PARAM_VDEC_MB_QUANTIZATION	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x6)
#define HFI_PROPERTY_PARAM_VDEC_NUM_CONCEALED_MB	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x7)
#define HFI_PROPERTY_PARAM_VDEC_H264_ENTROPY_SWITCHING	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x8)
#define HFI_PROPERTY_PARAM_VDEC_OUTPUT2_KEEP_ASPECT_RATIO	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x9)
#define HFI_PROPERTY_PARAM_VDEC_FRAME_RATE_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0xa)
#define HFI_PROPERTY_PARAM_VDEC_PANSCAN_WNDW_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0xb)
#define HFI_PROPERTY_PARAM_VDEC_RECOVERY_POINT_SEI_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0xc)
#define HFI_PROPERTY_PARAM_VDEC_THUMBNAIL_MODE	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0xd)
#define HFI_PROPERTY_PARAM_VDEC_FRAME_ASSEMBLY	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0xe)
#define HFI_PROPERTY_PARAM_VDEC_VC1_FRAMEDISP_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x11)
#define HFI_PROPERTY_PARAM_VDEC_VC1_SEQDISP_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x12)
#define HFI_PROPERTY_PARAM_VDEC_TIMESTAMP_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x13)
#define HFI_PROPERTY_PARAM_VDEC_INTERLACE_VIDEO_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x14)
#define HFI_PROPERTY_PARAM_VDEC_AVC_SESSION_SELECT	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x15)
#define HFI_PROPERTY_PARAM_VDEC_MPEG2_SEQDISP_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x16)
#define HFI_PROPERTY_PARAM_VDEC_STREAM_USERDATA_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x17)
#define HFI_PROPERTY_PARAM_VDEC_FRAME_QP_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x18)
#define HFI_PROPERTY_PARAM_VDEC_FRAME_BITS_INFO_EXTRADATA	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x19)
#define HFI_PROPERTY_PARAM_VDEC_SCS_THRESHOLD	\
	(HFI_PROPERTY_PARAM_VDEC_OX_START + 0x1a)

#define HFI_PROPERTY_CONFIG_VDEC_OX_START	\
	(HFI_DOMAIN_BASE_VDEC + HFI_ARCH_OX_OFFSET + 0x0000)
#define HFI_PROPERTY_CONFIG_VDEC_POST_LOOP_DEBLOCKER	\
	(HFI_PROPERTY_CONFIG_VDEC_OX_START + 0x1)
#define HFI_PROPERTY_CONFIG_VDEC_MB_ERROR_MAP_REPORTING	\
	(HFI_PROPERTY_CONFIG_VDEC_OX_START + 0x2)
#define HFI_PROPERTY_CONFIG_VDEC_MB_ERROR_MAP	\
	(HFI_PROPERTY_CONFIG_VDEC_OX_START + 0x3)

#define HFI_PROPERTY_PARAM_VENC_OX_START	\
	(HFI_DOMAIN_BASE_VENC + HFI_ARCH_OX_OFFSET + 0x5000)
#define  HFI_PROPERTY_PARAM_VENC_MULTI_SLICE_INFO	\
	(HFI_PROPERTY_PARAM_VENC_OX_START + 0x1)
#define  HFI_PROPERTY_PARAM_VENC_H264_IDR_S3D_FRAME_PACKING_NAL	\
	(HFI_PROPERTY_PARAM_VENC_OX_START + 0x2)
#define  HFI_PROPERTY_PARAM_VENC_LTR_INFO	\
	(HFI_PROPERTY_PARAM_VENC_OX_START + 0x3)
#define  HFI_PROPERTY_PARAM_VENC_MBI_DUMPING	\
	(HFI_PROPERTY_PARAM_VENC_OX_START + 0x5)

#define HFI_PROPERTY_CONFIG_VENC_OX_START	\
	(HFI_DOMAIN_BASE_VENC + HFI_ARCH_OX_OFFSET + 0x6000)
#define HFI_PROPERTY_CONFIG_VENC_FRAME_QP	\
	(HFI_PROPERTY_CONFIG_VENC_OX_START + 0x1)

#define HFI_PROPERTY_PARAM_VPE_OX_START	\
	(HFI_DOMAIN_BASE_VPE + HFI_ARCH_OX_OFFSET + 0x7000)
#define HFI_PROPERTY_PARAM_VPE_COLOR_SPACE_CONVERSION	\
	(HFI_PROPERTY_PARAM_VPE_OX_START + 0x1)

#define HFI_PROPERTY_CONFIG_VPE_OX_START	\
	(HFI_DOMAIN_BASE_VPE + HFI_ARCH_OX_OFFSET + 0x8000)

#define HFI_CHROMA_SITE_0			(HFI_OX_BASE + 0x1)
#define HFI_CHROMA_SITE_1			(HFI_OX_BASE + 0x2)
#define HFI_CHROMA_SITE_2			(HFI_OX_BASE + 0x3)
#define HFI_CHROMA_SITE_3			(HFI_OX_BASE + 0x4)
#define HFI_CHROMA_SITE_4			(HFI_OX_BASE + 0x5)
#define HFI_CHROMA_SITE_5			(HFI_OX_BASE + 0x6)

#define HFI_PRIORITY_LOW			10
#define HFI_PRIOIRTY_MEDIUM			20
#define HFI_PRIORITY_HIGH			30

#define HFI_OUTPUT_ORDER_DISPLAY		(HFI_OX_BASE + 0x1)
#define HFI_OUTPUT_ORDER_DECODE			(HFI_OX_BASE + 0x2)

#define HFI_RATE_CONTROL_OFF			(HFI_OX_BASE + 0x1)
#define HFI_RATE_CONTROL_VBR_VFR		(HFI_OX_BASE + 0x2)
#define HFI_RATE_CONTROL_VBR_CFR		(HFI_OX_BASE + 0x3)
#define HFI_RATE_CONTROL_CBR_VFR		(HFI_OX_BASE + 0x4)
#define HFI_RATE_CONTROL_CBR_CFR		(HFI_OX_BASE + 0x5)

#define HFI_VIDEO_CODEC_H264			0x00000002
#define HFI_VIDEO_CODEC_H263			0x00000004
#define HFI_VIDEO_CODEC_MPEG1			0x00000008
#define HFI_VIDEO_CODEC_MPEG2			0x00000010
#define HFI_VIDEO_CODEC_MPEG4			0x00000020
#define HFI_VIDEO_CODEC_DIVX_311		0x00000040
#define HFI_VIDEO_CODEC_DIVX			0x00000080
#define HFI_VIDEO_CODEC_VC1			0x00000100
#define HFI_VIDEO_CODEC_SPARK			0x00000200
#define HFI_VIDEO_CODEC_VP8			0x00001000
#define HFI_VIDEO_CODEC_HEVC			0x00002000
#define HFI_VIDEO_CODEC_HEVC_HYBRID		0x00004000

#define HFI_H264_PROFILE_BASELINE		0x00000001
#define HFI_H264_PROFILE_MAIN			0x00000002
#define HFI_H264_PROFILE_HIGH			0x00000004
#define HFI_H264_PROFILE_STEREO_HIGH		0x00000008
#define HFI_H264_PROFILE_MULTIVIEW_HIGH		0x00000010
#define HFI_H264_PROFILE_CONSTRAINED_BASE	0x00000020
#define HFI_H264_PROFILE_CONSTRAINED_HIGH	0x00000040

#define HFI_H264_LEVEL_1			0x00000001
#define HFI_H264_LEVEL_1b			0x00000002
#define HFI_H264_LEVEL_11			0x00000004
#define HFI_H264_LEVEL_12			0x00000008
#define HFI_H264_LEVEL_13			0x00000010
#define HFI_H264_LEVEL_2			0x00000020
#define HFI_H264_LEVEL_21			0x00000040
#define HFI_H264_LEVEL_22			0x00000080
#define HFI_H264_LEVEL_3			0x00000100
#define HFI_H264_LEVEL_31			0x00000200
#define HFI_H264_LEVEL_32			0x00000400
#define HFI_H264_LEVEL_4			0x00000800
#define HFI_H264_LEVEL_41			0x00001000
#define HFI_H264_LEVEL_42			0x00002000
#define HFI_H264_LEVEL_5			0x00004000
#define HFI_H264_LEVEL_51			0x00008000
#define HFI_H264_LEVEL_52			0x00010000

#define HFI_H263_PROFILE_BASELINE		0x00000001

#define HFI_H263_LEVEL_10			0x00000001
#define HFI_H263_LEVEL_20			0x00000002
#define HFI_H263_LEVEL_30			0x00000004
#define HFI_H263_LEVEL_40			0x00000008
#define HFI_H263_LEVEL_45			0x00000010
#define HFI_H263_LEVEL_50			0x00000020
#define HFI_H263_LEVEL_60			0x00000040
#define HFI_H263_LEVEL_70			0x00000080

#define HFI_MPEG2_PROFILE_SIMPLE		0x00000001
#define HFI_MPEG2_PROFILE_MAIN			0x00000002
#define HFI_MPEG2_PROFILE_422			0x00000004
#define HFI_MPEG2_PROFILE_SNR			0x00000008
#define HFI_MPEG2_PROFILE_SPATIAL		0x00000010
#define HFI_MPEG2_PROFILE_HIGH			0x00000020

#define HFI_MPEG2_LEVEL_LL			0x00000001
#define HFI_MPEG2_LEVEL_ML			0x00000002
#define HFI_MPEG2_LEVEL_H14			0x00000004
#define HFI_MPEG2_LEVEL_HL			0x00000008

#define HFI_MPEG4_PROFILE_SIMPLE		0x00000001
#define HFI_MPEG4_PROFILE_ADVANCEDSIMPLE	0x00000002

#define HFI_MPEG4_LEVEL_0			0x00000001
#define HFI_MPEG4_LEVEL_0b			0x00000002
#define HFI_MPEG4_LEVEL_1			0x00000004
#define HFI_MPEG4_LEVEL_2			0x00000008
#define HFI_MPEG4_LEVEL_3			0x00000010
#define HFI_MPEG4_LEVEL_4			0x00000020
#define HFI_MPEG4_LEVEL_4a			0x00000040
#define HFI_MPEG4_LEVEL_5			0x00000080
#define HFI_MPEG4_LEVEL_6			0x00000100
#define HFI_MPEG4_LEVEL_7			0x00000200
#define HFI_MPEG4_LEVEL_8			0x00000400
#define HFI_MPEG4_LEVEL_9			0x00000800
#define HFI_MPEG4_LEVEL_3b			0x00001000

#define HFI_VC1_PROFILE_SIMPLE			0x00000001
#define HFI_VC1_PROFILE_MAIN			0x00000002
#define HFI_VC1_PROFILE_ADVANCED		0x00000004

#define HFI_VC1_LEVEL_LOW			0x00000001
#define HFI_VC1_LEVEL_MEDIUM			0x00000002
#define HFI_VC1_LEVEL_HIGH			0x00000004
#define HFI_VC1_LEVEL_0				0x00000008
#define HFI_VC1_LEVEL_1				0x00000010
#define HFI_VC1_LEVEL_2				0x00000020
#define HFI_VC1_LEVEL_3				0x00000040
#define HFI_VC1_LEVEL_4				0x00000080

#define HFI_VPX_PROFILE_SIMPLE			0x00000001
#define HFI_VPX_PROFILE_ADVANCED		0x00000002
#define HFI_VPX_PROFILE_VERSION_0		0x00000004
#define HFI_VPX_PROFILE_VERSION_1		0x00000008
#define HFI_VPX_PROFILE_VERSION_2		0x00000010
#define HFI_VPX_PROFILE_VERSION_3		0x00000020

#define HFI_DIVX_FORMAT_4			(HFI_COMMON_BASE + 0x1)
#define HFI_DIVX_FORMAT_5			(HFI_COMMON_BASE + 0x2)
#define HFI_DIVX_FORMAT_6			(HFI_COMMON_BASE + 0x3)

#define HFI_DIVX_PROFILE_QMOBILE		0x00000001
#define HFI_DIVX_PROFILE_MOBILE			0x00000002
#define HFI_DIVX_PROFILE_MT			0x00000004
#define HFI_DIVX_PROFILE_HT			0x00000008
#define HFI_DIVX_PROFILE_HD			0x00000010

#define HFI_HEVC_PROFILE_MAIN			0x00000001
#define HFI_HEVC_PROFILE_MAIN10			0x00000002
#define HFI_HEVC_PROFILE_MAIN_STILL_PIC		0x00000004

#define HFI_HEVC_LEVEL_1			0x00000001
#define HFI_HEVC_LEVEL_2			0x00000002
#define HFI_HEVC_LEVEL_21			0x00000004
#define HFI_HEVC_LEVEL_3			0x00000008
#define HFI_HEVC_LEVEL_31			0x00000010
#define HFI_HEVC_LEVEL_4			0x00000020
#define HFI_HEVC_LEVEL_41			0x00000040
#define HFI_HEVC_LEVEL_5			0x00000080
#define HFI_HEVC_LEVEL_51			0x00000100
#define HFI_HEVC_LEVEL_52			0x00000200
#define HFI_HEVC_LEVEL_6			0x00000400
#define HFI_HEVC_LEVEL_61			0x00000800
#define HFI_HEVC_LEVEL_62			0x00001000

#define HFI_HEVC_TIER_MAIN			0x1
#define HFI_HEVC_TIER_HIGH0			0x2

#define HFI_BUFFER_INPUT			(HFI_COMMON_BASE + 0x1)
#define HFI_BUFFER_OUTPUT			(HFI_COMMON_BASE + 0x2)
#define HFI_BUFFER_OUTPUT2			(HFI_COMMON_BASE + 0x3)
#define HFI_BUFFER_INTERNAL_PERSIST		(HFI_COMMON_BASE + 0x4)
#define HFI_BUFFER_INTERNAL_PERSIST_1		(HFI_COMMON_BASE + 0x5)

#define HFI_VENC_PERFMODE_MAX_QUALITY		0x1
#define HFI_VENC_PERFMODE_POWER_SAVE		0x2

#define HFI_PROPERTY_SYS_COMMON_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_COMMON_OFFSET + 0x0000)
#define HFI_PROPERTY_SYS_DEBUG_CONFIG	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x1)
#define HFI_PROPERTY_SYS_RESOURCE_OCMEM_REQUIREMENT_INFO	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x2)
#define HFI_PROPERTY_SYS_CONFIG_VCODEC_CLKFREQ	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x3)
#define HFI_PROPERTY_SYS_IDLE_INDICATOR	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x4)
#define HFI_PROPERTY_SYS_CODEC_POWER_PLANE_CTRL	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x5)
#define HFI_PROPERTY_SYS_IMAGE_VERSION	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x6)
#define HFI_PROPERTY_SYS_CONFIG_COVERAGE	\
	(HFI_PROPERTY_SYS_COMMON_START + 0x7)

#define HFI_PROPERTY_PARAM_COMMON_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_COMMON_OFFSET + 0x1000)
#define HFI_PROPERTY_PARAM_FRAME_SIZE	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x1)
#define HFI_PROPERTY_PARAM_UNCOMPRESSED_PLANE_ACTUAL_INFO	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x2)
#define HFI_PROPERTY_PARAM_UNCOMPRESSED_FORMAT_SELECT	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x3)
#define HFI_PROPERTY_PARAM_UNCOMPRESSED_FORMAT_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x4)
#define HFI_PROPERTY_PARAM_PROFILE_LEVEL_CURRENT	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x5)
#define HFI_PROPERTY_PARAM_PROFILE_LEVEL_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x6)
#define HFI_PROPERTY_PARAM_CAPABILITY_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x7)
#define HFI_PROPERTY_PARAM_PROPERTIES_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x8)
#define HFI_PROPERTY_PARAM_CODEC_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0x9)
#define HFI_PROPERTY_PARAM_NAL_STREAM_FORMAT_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xa)
#define HFI_PROPERTY_PARAM_NAL_STREAM_FORMAT_SELECT	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xb)
#define HFI_PROPERTY_PARAM_MULTI_VIEW_FORMAT	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xc)
#define  HFI_PROPERTY_PARAM_MAX_SEQUENCE_HEADER_SIZE	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xd)
#define  HFI_PROPERTY_PARAM_CODEC_MASK_SUPPORTED	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xe)
#define HFI_PROPERTY_PARAM_MVC_BUFFER_LAYOUT	\
	(HFI_PROPERTY_PARAM_COMMON_START + 0xf)
#define HFI_PROPERTY_PARAM_MAX_SESSIONS_SUPPORTED	\
	 (HFI_PROPERTY_PARAM_COMMON_START + 0x10)

#define HFI_PROPERTY_CONFIG_COMMON_START	\
	(HFI_DOMAIN_BASE_COMMON + HFI_ARCH_COMMON_OFFSET + 0x2000)
#define HFI_PROPERTY_CONFIG_FRAME_RATE	\
	(HFI_PROPERTY_CONFIG_COMMON_START + 0x1)

#define HFI_PROPERTY_PARAM_VDEC_COMMON_START	\
	(HFI_DOMAIN_BASE_VDEC + HFI_ARCH_COMMON_OFFSET + 0x3000)
#define HFI_PROPERTY_PARAM_VDEC_MULTI_STREAM	\
	(HFI_PROPERTY_PARAM_VDEC_COMMON_START + 0x1)
#define HFI_PROPERTY_PARAM_VDEC_CONCEAL_COLOR	\
	(HFI_PROPERTY_PARAM_VDEC_COMMON_START + 0x2)
#define HFI_PROPERTY_PARAM_VDEC_NONCP_OUTPUT2	\
	(HFI_PROPERTY_PARAM_VDEC_COMMON_START + 0x3)

#define HFI_PROPERTY_CONFIG_VDEC_COMMON_START	\
	(HFI_DOMAIN_BASE_VDEC + HFI_ARCH_COMMON_OFFSET + 0x4000)

#define HFI_PROPERTY_PARAM_VENC_COMMON_START	\
	(HFI_DOMAIN_BASE_VENC + HFI_ARCH_COMMON_OFFSET + 0x5000)
#define HFI_PROPERTY_PARAM_VENC_SLICE_DELIVERY_MODE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1)
#define HFI_PROPERTY_PARAM_VENC_H264_ENTROPY_CONTROL	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x2)
#define HFI_PROPERTY_PARAM_VENC_H264_DEBLOCK_CONTROL	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x3)
#define HFI_PROPERTY_PARAM_VENC_RATE_CONTROL	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x4)
#define HFI_PROPERTY_PARAM_VENC_H264_PICORDER_CNT_TYPE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x5)
#define HFI_PROPERTY_PARAM_VENC_SESSION_QP	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x6)
#define HFI_PROPERTY_PARAM_VENC_MPEG4_AC_PREDICTION	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x7)
#define HFI_PROPERTY_PARAM_VENC_SESSION_QP_RANGE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x8)
#define HFI_PROPERTY_PARAM_VENC_MPEG4_TIME_RESOLUTION	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x9)
#define HFI_PROPERTY_PARAM_VENC_MPEG4_SHORT_HEADER	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xa)
#define HFI_PROPERTY_PARAM_VENC_MPEG4_HEADER_EXTENSION	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xb)
#define HFI_PROPERTY_PARAM_VENC_OPEN_GOP	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xc)
#define HFI_PROPERTY_PARAM_VENC_INTRA_REFRESH	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xd)
#define HFI_PROPERTY_PARAM_VENC_MULTI_SLICE_CONTROL	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xe)
#define HFI_PROPERTY_PARAM_VENC_VBV_HRD_BUF_SIZE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0xf)
#define HFI_PROPERTY_PARAM_VENC_QUALITY_VS_SPEED	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x10)
#define HFI_PROPERTY_PARAM_VENC_ADVANCED	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x12)
#define HFI_PROPERTY_PARAM_VENC_H264_SPS_ID	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x14)
#define HFI_PROPERTY_PARAM_VENC_H264_PPS_ID	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x15)
#define HFI_PROPERTY_PARAM_VENC_H264_GENERATE_AUDNAL	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x16)
#define HFI_PROPERTY_PARAM_VENC_ASPECT_RATIO	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x17)
#define HFI_PROPERTY_PARAM_VENC_NUMREF	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x18)
#define HFI_PROPERTY_PARAM_VENC_MULTIREF_P	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x19)
#define HFI_PROPERTY_PARAM_VENC_H264_NAL_SVC_EXT	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1b)
#define HFI_PROPERTY_PARAM_VENC_LTRMODE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1c)
#define HFI_PROPERTY_PARAM_VENC_VIDEO_FULL_RANGE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1d)
#define HFI_PROPERTY_PARAM_VENC_H264_VUI_TIMING_INFO	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1e)
#define HFI_PROPERTY_PARAM_VENC_VC1_PERF_CFG	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x1f)
#define HFI_PROPERTY_PARAM_VENC_MAX_NUM_B_FRAMES	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x20)
#define HFI_PROPERTY_PARAM_VENC_H264_VUI_BITSTREAM_RESTRC	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x21)
#define HFI_PROPERTY_PARAM_VENC_PRESERVE_TEXT_QUALITY	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x23)
#define HFI_PROPERTY_PARAM_VENC_HIER_P_MAX_NUM_ENH_LAYER	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x26)
#define HFI_PROPERTY_PARAM_VENC_DISABLE_RC_TIMESTAMP	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x27)
#define HFI_PROPERTY_PARAM_VENC_INITIAL_QP	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x28)
#define HFI_PROPERTY_PARAM_VENC_VPX_ERROR_RESILIENCE_MODE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x29)
#define HFI_PROPERTY_PARAM_VENC_HIER_B_MAX_NUM_ENH_LAYER	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x2c)
#define HFI_PROPERTY_PARAM_VENC_HIER_P_HYBRID_MODE	\
	(HFI_PROPERTY_PARAM_VENC_COMMON_START + 0x2f)

#define HFI_PROPERTY_CONFIG_VENC_COMMON_START	\
	(HFI_DOMAIN_BASE_VENC + HFI_ARCH_COMMON_OFFSET + 0x6000)
#define HFI_PROPERTY_CONFIG_VENC_TARGET_BITRATE	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x1)
#define HFI_PROPERTY_CONFIG_VENC_IDR_PERIOD	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x2)
#define HFI_PROPERTY_CONFIG_VENC_INTRA_PERIOD	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x3)
#define HFI_PROPERTY_CONFIG_VENC_REQUEST_SYNC_FRAME	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x4)
#define HFI_PROPERTY_CONFIG_VENC_SLICE_SIZE	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x5)
#define HFI_PROPERTY_CONFIG_VENC_MAX_BITRATE	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x7)

#define HFI_PROPERTY_PARAM_VPE_COMMON_START	\
	(HFI_DOMAIN_BASE_VPE + HFI_ARCH_COMMON_OFFSET + 0x7000)
#define HFI_PROPERTY_CONFIG_VENC_SYNC_FRAME_SEQUENCE_HEADER	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x8)
#define HFI_PROPERTY_CONFIG_VENC_MARKLTRFRAME	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0x9)
#define HFI_PROPERTY_CONFIG_VENC_USELTRFRAME	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0xa)
#define HFI_PROPERTY_CONFIG_VENC_HIER_P_ENH_LAYER	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0xb)
#define HFI_PROPERTY_CONFIG_VENC_LTRPERIOD	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0xc)
#define HFI_PROPERTY_CONFIG_VENC_PERF_MODE	\
	(HFI_PROPERTY_CONFIG_VENC_COMMON_START + 0xe)

#define HFI_PROPERTY_CONFIG_VPE_COMMON_START	\
	(HFI_DOMAIN_BASE_VPE + HFI_ARCH_COMMON_OFFSET + 0x8000)
#define HFI_PROPERTY_CONFIG_VPE_DEINTERLACE	\
	(HFI_PROPERTY_CONFIG_VPE_COMMON_START + 0x1)
#define HFI_PROPERTY_CONFIG_VPE_OPERATIONS	\
	(HFI_PROPERTY_CONFIG_VPE_COMMON_START + 0x2)

struct hfi_buffer_info {
	u32 buffer_addr;
	u32 extradata_addr;
};

struct hfi_bitrate {
	u32 bitrate;
	u32 layer_id;
};

#define HFI_CAPABILITY_FRAME_WIDTH			(HFI_COMMON_BASE + 0x1)
#define HFI_CAPABILITY_FRAME_HEIGHT			(HFI_COMMON_BASE + 0x2)
#define HFI_CAPABILITY_MBS_PER_FRAME			(HFI_COMMON_BASE + 0x3)
#define HFI_CAPABILITY_MBS_PER_SECOND			(HFI_COMMON_BASE + 0x4)
#define HFI_CAPABILITY_FRAMERATE			(HFI_COMMON_BASE + 0x5)
#define HFI_CAPABILITY_SCALE_X				(HFI_COMMON_BASE + 0x6)
#define HFI_CAPABILITY_SCALE_Y				(HFI_COMMON_BASE + 0x7)
#define HFI_CAPABILITY_BITRATE				(HFI_COMMON_BASE + 0x8)
#define HFI_CAPABILITY_BFRAME				(HFI_COMMON_BASE + 0x9)
#define HFI_CAPABILITY_HIER_P_NUM_ENH_LAYERS		(HFI_COMMON_BASE + 0x10)
#define HFI_CAPABILITY_ENC_LTR_COUNT			(HFI_COMMON_BASE + 0x11)
#define HFI_CAPABILITY_CP_OUTPUT2_THRESH		(HFI_COMMON_BASE + 0x12)
#define HFI_CAPABILITY_HIER_P_HYBRID_NUM_ENH_LAYERS	(HFI_COMMON_BASE + 0x15)

struct hfi_capability {
	u32 capability_type;
	u32 min;
	u32 max;
	u32 step_size;
};

struct hfi_capabilities {
	u32 num_capabilities;
	struct hfi_capability data[1];
};

#define HFI_DEBUG_MSG_LOW	0x00000001
#define HFI_DEBUG_MSG_MEDIUM	0x00000002
#define HFI_DEBUG_MSG_HIGH	0x00000004
#define HFI_DEBUG_MSG_ERROR	0x00000008
#define HFI_DEBUG_MSG_FATAL	0x00000010
#define HFI_DEBUG_MSG_PERF	0x00000020

#define HFI_DEBUG_MODE_QUEUE	0x00000001
#define HFI_DEBUG_MODE_QDSS	0x00000002

struct hfi_debug_config {
	u32 config;
	u32 mode;
};

struct hfi_enable {
	u32 enable;
};

#define HFI_H264_DB_MODE_DISABLE		(HFI_COMMON_BASE + 0x1)
#define HFI_H264_DB_MODE_SKIP_SLICE_BOUNDARY	(HFI_COMMON_BASE + 0x2)
#define HFI_H264_DB_MODE_ALL_BOUNDARY		(HFI_COMMON_BASE + 0x3)

struct hfi_h264_db_control {
	u32 mode;
	u32 slice_alpha_offset;
	u32 slice_beta_offset;
};

#define HFI_H264_ENTROPY_CAVLC			(HFI_COMMON_BASE + 0x1)
#define HFI_H264_ENTROPY_CABAC			(HFI_COMMON_BASE + 0x2)

#define HFI_H264_CABAC_MODEL_0			(HFI_COMMON_BASE + 0x1)
#define HFI_H264_CABAC_MODEL_1			(HFI_COMMON_BASE + 0x2)
#define HFI_H264_CABAC_MODEL_2			(HFI_COMMON_BASE + 0x3)

struct hfi_h264_entropy_control {
	u32 entropy_mode;
	u32 cabac_model;
};

struct hfi_framerate {
	u32 buffer_type;
	u32 framerate;
};

#define HFI_INTRA_REFRESH_NONE			(HFI_COMMON_BASE + 0x1)
#define HFI_INTRA_REFRESH_CYCLIC		(HFI_COMMON_BASE + 0x2)
#define HFI_INTRA_REFRESH_ADAPTIVE		(HFI_COMMON_BASE + 0x3)
#define HFI_INTRA_REFRESH_CYCLIC_ADAPTIVE	(HFI_COMMON_BASE + 0x4)
#define HFI_INTRA_REFRESH_RANDOM		(HFI_COMMON_BASE + 0x5)

struct hfi_intra_refresh {
	u32 mode;
	u32 air_mbs;
	u32 air_ref;
	u32 cir_mbs;
};

struct hfi_intra_refresh_3x {
	u32 mode;
	u32 mbs;
};

struct hfi_idr_period {
	u32 idr_period;
};

struct hfi_operations_type {
	u32 rotation;
	u32 flip;
};

struct hfi_max_num_b_frames {
	u32 max_num_b_frames;
};

struct hfi_vc1e_perf_cfg_type {
	u32 search_range_x_subsampled[3];
	u32 search_range_y_subsampled[3];
};

struct hfi_conceal_color {
	u32 conceal_color;
};

struct hfi_intra_period {
	u32 pframes;
	u32 bframes;
};

struct hfi_mpeg4_header_extension {
	u32 header_extension;
};

struct hfi_mpeg4_time_resolution {
	u32 time_increment_resolution;
};

struct hfi_multi_stream {
	u32 buffer_type;
	u32 enable;
	u32 width;
	u32 height;
};

struct hfi_multi_stream_3x {
	u32 buffer_type;
	u32 enable;
};

struct hfi_multi_view_format {
	u32 views;
	u32 view_order[1];
};

#define HFI_MULTI_SLICE_OFF			(HFI_COMMON_BASE + 0x1)
#define HFI_MULTI_SLICE_BY_MB_COUNT		(HFI_COMMON_BASE + 0x2)
#define HFI_MULTI_SLICE_BY_BYTE_COUNT		(HFI_COMMON_BASE + 0x3)
#define HFI_MULTI_SLICE_GOB			(HFI_COMMON_BASE + 0x4)

struct hfi_multi_slice_control {
	u32 multi_slice;
	u32 slice_size;
};

#define HFI_NAL_FORMAT_STARTCODES		0x1
#define HFI_NAL_FORMAT_ONE_NAL_PER_BUFFER	0x2
#define HFI_NAL_FORMAT_ONE_BYTE_LENGTH		0x4
#define HFI_NAL_FORMAT_TWO_BYTE_LENGTH		0x8
#define HFI_NAL_FORMAT_FOUR_BYTE_LENGTH		0x10

struct hfi_nal_stream_format {
	u32 format;
};

struct hfi_nal_stream_format_select {
	u32 format;
};

#define HFI_PICTURE_TYPE_I			0x01
#define HFI_PICTURE_TYPE_P			0x02
#define HFI_PICTURE_TYPE_B			0x04
#define HFI_PICTURE_TYPE_IDR			0x08

struct hfi_profile_level {
	u32 profile;
	u32 level;
};

struct hfi_profile_level_supported {
	u32 profile_count;
	struct hfi_profile_level profile_level[1];
};

struct hfi_quality_vs_speed {
	u32 quality_vs_speed;
};

struct hfi_quantization {
	u32 qp_i;
	u32 qp_p;
	u32 qp_b;
	u32 layer_id;
};

struct hfi_initial_quantization {
	u32 qp_i;
	u32 qp_p;
	u32 qp_b;
	u32 init_qp_enable;
};

struct hfi_quantization_range {
	u32 min_qp;
	u32 max_qp;
	u32 layer_id;
};

#define HFI_LTR_MODE_DISABLE	0x0
#define HFI_LTR_MODE_MANUAL	0x1
#define HFI_LTR_MODE_PERIODIC	0x2

struct hfi_ltr_mode {
	u32 ltr_mode;
	u32 ltr_count;
	u32 trust_mode;
};

struct hfi_ltr_use {
	u32 ref_ltr;
	u32 use_constrnt;
	u32 frames;
};

struct hfi_ltr_mark {
	u32 mark_frame;
};

struct hfi_framesize {
	u32 buffer_type;
	u32 width;
	u32 height;
};

struct hfi_h264_vui_timing_info {
	u32 enable;
	u32 fixed_framerate;
	u32 time_scale;
};

#define HFI_COLOR_FORMAT_MONOCHROME		(HFI_COMMON_BASE + 0x1)
#define HFI_COLOR_FORMAT_NV12			(HFI_COMMON_BASE + 0x2)
#define HFI_COLOR_FORMAT_NV21			(HFI_COMMON_BASE + 0x3)
#define HFI_COLOR_FORMAT_NV12_4x4TILE		(HFI_COMMON_BASE + 0x4)
#define HFI_COLOR_FORMAT_NV21_4x4TILE		(HFI_COMMON_BASE + 0x5)
#define HFI_COLOR_FORMAT_YUYV			(HFI_COMMON_BASE + 0x6)
#define HFI_COLOR_FORMAT_YVYU			(HFI_COMMON_BASE + 0x7)
#define HFI_COLOR_FORMAT_UYVY			(HFI_COMMON_BASE + 0x8)
#define HFI_COLOR_FORMAT_VYUY			(HFI_COMMON_BASE + 0x9)
#define HFI_COLOR_FORMAT_RGB565			(HFI_COMMON_BASE + 0xa)
#define HFI_COLOR_FORMAT_BGR565			(HFI_COMMON_BASE + 0xb)
#define HFI_COLOR_FORMAT_RGB888			(HFI_COMMON_BASE + 0xc)
#define HFI_COLOR_FORMAT_BGR888			(HFI_COMMON_BASE + 0xd)
#define HFI_COLOR_FORMAT_YUV444			(HFI_COMMON_BASE + 0xe)
#define HFI_COLOR_FORMAT_RGBA8888		(HFI_COMMON_BASE + 0x10)

#define HFI_COLOR_FORMAT_UBWC_BASE		0x8000
#define HFI_COLOR_FORMAT_10_BIT_BASE		0x4000

#define HFI_COLOR_FORMAT_YUV420_TP10	\
	(HFI_COLOR_FORMAT_10_BIT_BASE + HFI_COLOR_FORMAT_NV12)
#define HFI_COLOR_FORMAT_NV12_UBWC	\
	(HFI_COLOR_FORMAT_UBWC_BASE + HFI_COLOR_FORMAT_NV12)
#define HFI_COLOR_FORMAT_YUV420_TP10_UBWC	\
	(HFI_COLOR_FORMAT_UBWC_BASE + HFI_COLOR_FORMAT_YUV420_TP10)
#define HFI_COLOR_FORMAT_RGBA8888_UBWC	\
	(HFI_COLOR_FORMAT_UBWC_BASE + HFI_COLOR_FORMAT_RGBA8888)

struct hfi_uncompressed_format_select {
	u32 buffer_type;
	u32 format;
};

struct hfi_uncompressed_format_supported {
	u32 buffer_type;
	u32 format_entries;
	u32 format_info[1];
};

struct hfi_uncompressed_plane_actual {
	int actual_stride;
	u32 actual_plane_buffer_height;
};

struct hfi_uncompressed_plane_actual_info {
	u32 buffer_type;
	u32 num_planes;
	struct hfi_uncompressed_plane_actual plane_format[1];
};

struct hfi_uncompressed_plane_constraints {
	u32 stride_multiples;
	u32 max_stride;
	u32 min_plane_buffer_height_multiple;
	u32 buffer_alignment;
};

struct hfi_uncompressed_plane_info {
	u32 format;
	u32 num_planes;
	struct hfi_uncompressed_plane_constraints plane_format[1];
};

struct hfi_uncompressed_plane_actual_constraints_info {
	u32 buffer_type;
	u32 num_planes;
	struct hfi_uncompressed_plane_constraints plane_format[1];
};

struct hfi_codec_supported {
	u32 dec_codecs;
	u32 enc_codecs;
};

struct hfi_properties_supported {
	u32 num_properties;
	u32 properties[1];
};

#define HFI_MAX_MATRIX_COEFFS	9
#define HFI_MAX_BIAS_COEFFS	3
#define HFI_MAX_LIMIT_COEFFS	6

struct hfi_vpe_color_space_conversion {
	u32 csc_matrix[HFI_MAX_MATRIX_COEFFS];
	u32 csc_bias[HFI_MAX_BIAS_COEFFS];
	u32 csc_limit[HFI_MAX_LIMIT_COEFFS];
};

#define HFI_ROTATE_NONE		(HFI_COMMON_BASE + 0x1)
#define HFI_ROTATE_90		(HFI_COMMON_BASE + 0x2)
#define HFI_ROTATE_180		(HFI_COMMON_BASE + 0x3)
#define HFI_ROTATE_270		(HFI_COMMON_BASE + 0x4)

#define HFI_FLIP_NONE		(HFI_COMMON_BASE + 0x1)
#define HFI_FLIP_HORIZONTAL	(HFI_COMMON_BASE + 0x2)
#define HFI_FLIP_VERTICAL	(HFI_COMMON_BASE + 0x3)

struct hfi_operations {
	u32 rotate;
	u32 flip;
};

#define HFI_RESOURCE_OCMEM	0x1

struct hfi_resource_ocmem {
	u32 size;
	u32 mem;
};

struct hfi_resource_ocmem_requirement {
	u32 session_domain;
	u32 width;
	u32 height;
	u32 size;
};

struct hfi_resource_ocmem_requirement_info {
	u32 num_entries;
	struct hfi_resource_ocmem_requirement requirements[1];
};

struct hfi_property_sys_image_version_info_type {
	u32 string_size;
	u8  str_image_version[1];
};

struct hfi_venc_config_advanced {
	u8 pipe2d;
	u8 hw_mode;
	u8 low_delay_enforce;
	u8 worker_vppsg_delay;
	int close_gop;
	int h264_constrain_intra_pred;
	int h264_transform_8x8_flag;
	int mpeg4_qpel_enable;
	int multi_refp_en;
	int qmatrix_en;
	u8 vpp_info_packet_mode;
	u8 ref_tile_mode;
	u8 bitstream_flush_mode;
	u32 vppsg_vspap_fb_sync_delay;
	u32 rc_initial_delay;
	u32 peak_bitrate_constraint;
	u32 ds_display_frame_width;
	u32 ds_display_frame_height;
	u32 perf_tune_param_ptr;
	u32 input_x_offset;
	u32 input_y_offset;
	u32 input_roi_width;
	u32 input_roi_height;
	u32 vsp_fifo_dma_sel;
	u32 h264_num_ref_frames;
};

struct hfi_vbv_hrd_bufsize {
	u32 buffer_size;
};

struct hfi_codec_mask_supported {
	u32 codecs;
	u32 video_domains;
};

struct hfi_seq_header_info {
	u32 max_hader_len;
};
struct hfi_aspect_ratio {
	u32 aspect_width;
	u32 aspect_height;
};
#define HFI_MVC_BUFFER_LAYOUT_TOP_BOTTOM	0
#define HFI_MVC_BUFFER_LAYOUT_SIDEBYSIDE	1
#define HFI_MVC_BUFFER_LAYOUT_SEQ		2

struct hfi_mvc_buffer_layout_descp_type {
	u32 layout_type;
	u32 bright_view_first;
	u32 ngap;
};

struct hfi_scs_threshold {
	u32 threshold_value;
};

#define HFI_TEST_SSR_SW_ERR_FATAL	0x1
#define HFI_TEST_SSR_SW_DIV_BY_ZERO	0x2
#define HFI_TEST_SSR_HW_WDOG_IRQ	0x3

struct hfi_buffer_alloc_mode {
	u32 type;
	u32 mode;
};

struct hfi_index_extradata_config {
	u32 enable;
	u32 index_extra_data_id;
};

struct hfi_extradata_header {
	u32 size;
	u32 version;
	u32 port_index;
	u32 type;
	u32 data_size;
	u8 data[1];
};

struct hfi_batch_info {
	u32 input_batch_count;
	u32 output_batch_count;
};

struct hfi_buffer_count_actual {
	u32 type;
	u32 count_actual;
};

struct hfi_buffer_size_actual {
	u32 type;
	u32 size;
};

struct hfi_buffer_display_hold_count_actual {
	u32 type;
	u32 hold_count;
};

struct hfi_buffer_requirements {
	u32 type;
	u32 size;
	u32 region_size;
	u32 hold_count;
	u32 count_min;
	u32 count_actual;
	u32 contiguous;
	u32 alignment;
};

struct hfi_data_payload {
	u32 size;
	u8 data[1];
};

struct hfi_enable_picture {
	u32 picture_type;
};

struct hfi_display_picture_buffer_count {
	int enable;
	u32 count;
};

struct hfi_extra_data_header_config {
	u32 type;
	u32 buffer_type;
	u32 version;
	u32 port_index;
	u32 client_extra_data_id;
};

struct hfi_interlace_format_supported {
	u32 buffer_type;
	u32 format;
};

struct hfi_buffer_alloc_mode_supported {
	u32 buffer_type;
	u32 num_entries;
	u32 data[1];
};

struct hfi_mb_error_map {
	u32 error_map_size;
	u8 error_map[1];
};

struct hfi_metadata_pass_through {
	int enable;
	u32 size;
};

struct hfi_multi_view_select {
	u32 view_index;
};

struct hfi_hybrid_hierp {
	u32 layers;
};

struct hfi_pkt_hdr {
	u32 size;
	u32 pkt_type;
};

struct hfi_session_hdr_pkt {
	struct hfi_pkt_hdr hdr;
	u32 session_id;
};

struct hfi_session_pkt {
	struct hfi_session_hdr_pkt shdr;
};

#endif
